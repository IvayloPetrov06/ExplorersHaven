﻿@using Explorers_Haven.ViewModels.Offer
@model OfferFilterViewModel

<!-- Main Container -->
<div class="trivago-container">
    <!-- Hero Search Section -->
    <div class="hero-section">
        <div class="search-wrapper">
            <h1 class="main-heading">Открийте идеалната почивка и сравнете оферти</h1>

            <div class="search-box">
                <form>
                    <div class="search-input-wrapper">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" asp-for="Search" class="search-input" placeholder="Търси оферти...">
                        <button type="submit" class="search-button">Търсене</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Results Section -->
    <div class="results-section">
        <div class="results-header">
            <h2 class="section-title">Всички оферти</h2>
            
        </div>

        <!-- Offers Carousel -->
        <div class="carousel-container">
            <div class="carousel-wrapper" id="offers-carousel">
                <div class="carousel-track">
                    @for (int i = 0; i < Model.Offers.Count; i++)
                    {
                        var offer = Model.Offers[i];
                        <div class="carousel-item @(i < 3 ? "active" : "")">
                            <div class="offer-card">
                                <div class="offer-image">
                                    <a asp-controller="Home" asp-action="OfferPage" asp-route-id="@offer.OfferId">
                                        <img src="@offer.OfferPic" alt="@offer.OfferName">
                                    </a>
                                    <form class="favoriteForm" method="post" action="/Favorite/Favorite">
                                        <div class="favorite-btn">
                                            <input type="hidden" name="id" value="@offer.OfferId" />
                                            <input type="checkbox" id="favorite_@offer.OfferId" class="favorite-checkbox" name="favorite-checkbox" value="true" @(offer.IsFavorited.Value ? "checked" : "")>
                                            <label class="favorite-btn-label" for="favorite_@offer.OfferId">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-heart">
                                                    <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                                                </svg>
                                                <div class="action">
                                                    <span class="option-1"></span>
                                                    <span class="option-2"></span>
                                                </div>
                                            </label>
                                        </div>
                                        <button type="submit" style="display:none;">Submit</button>
                                    </form>
                                </div>
                                <div class="offer-details">
                                    <div class="offer-info">
                                        <a asp-controller="Home" asp-action="OfferPage" asp-route-id="@offer.OfferId">
                                            <h3 class="offer-name">@offer.OfferName</h3>
                                        </a>
                                        <div class="rating-container">
                                            <span class="rating-number" style="margin-left: 4px;">@offer.OfferRating.Value.ToString("0.0")</span>
                                            @for (int j = 0; j < offer.OfferRatingStars; j++)
                                            {
                                                <div class="stay-stars">
                                                    <span>★</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="offer-actions">
                                        <div class="price-tag">
                                            <span class="price-label">Цена от</span>
                                            <span class="price-value">@offer.OfferPrice лв</span>
                                        </div>
                                        <a asp-controller="Home" asp-action="OfferPage" asp-route-id="@offer.OfferId" class="btn-view">
                                            Виж оферта
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <button class="carousel-control prev" data-carousel="offers-carousel">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <button class="carousel-control next" data-carousel="offers-carousel">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>

        <!-- Cheapest Offers Section -->
        <div class="results-header mt-40">
            <h2 class="section-title">Discounted Offers</h2>
            <div class="special-label">
                <span class="discount-badge"><i class="fas fa-tag"></i> Discount for children and the elderly</span>
            </div>
        </div>

        <div class="carousel-container">
            <div class="carousel-wrapper" id="cheapest-carousel">
                <div class="carousel-track">
                    @for (int i = 0; i < Model.Cheapest_Offers.Count; i++)
                    {
                        var offer = Model.Cheapest_Offers[i];
                        <div class="carousel-item @(i < 3 ? "active" : "")">
                            <div class="offer-card special-offer">
                                <div class="offer-image">
                                    <div class="discount-badge-corner">
                                        <span>@offer.OfferDiscount %</span>
                                    </div>
                                    <a asp-controller="Home" asp-action="OfferPage" asp-route-id="@offer.OfferId">
                                        <img src="@offer.OfferPic" alt="@offer.OfferName">
                                    </a>
                                </div>
                                <div class="offer-details">
                                    <div class="offer-info">
                                        <h3 class="offer-name">@offer.OfferName</h3>
                                        <div class="rating-container">
                                            <span class="rating-number" style="margin-left: 4px;">@offer.OfferRating.Value.ToString("0.0")</span>
                                            @for (int j = 0; j < offer.OfferRatingStars; j++)
                                            {
                                                <div class="stay-stars">
                                                    <span>★</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="offer-actions">
                                        <div class="price-tag">
                                            <span class="price-label">Специална цена</span>
                                            <span class="price-value">@offer.OfferPrice лв</span>
                                        </div>
                                        <a asp-controller="Home" asp-action="OfferPage" asp-route-id="@offer.OfferId" class="btn-view">
                                            Виж оферта
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <button class="carousel-control prev" data-carousel="cheapest-carousel">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <button class="carousel-control next" data-carousel="cheapest-carousel">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Font Awesome and Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<style>
    /*favorite*/
    /* Fixed favorite button animation */

    .favorite-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 10;
    }

        .favorite-btn .favorite-checkbox {
            display: none;
        }

        .favorite-btn .favorite-btn-label {
            background-color: transparent;
            padding: 0;
            cursor: pointer;
            user-select: none;
            box-shadow: none;
        }

            .favorite-btn .favorite-btn-label svg {
                width: 30px;
                height: 30px;
                fill: rgba(255,255,255,0.7);
                stroke: white;
                stroke-width: 2;
                transition: all 0.3s ease;
            }

            .favorite-btn .favorite-btn-label:hover svg {
                fill: rgba(255,255,255,0.9);
            }

        .favorite-btn .favorite-checkbox:checked + .favorite-btn-label svg {
            fill: hsl(0deg 100% 50%);
            stroke: hsl(0deg 100% 50%);
            animation: heartButton 1s;
        }

    keyframes heartButton {
        0%

    {
        transform: scale(1);
    }

    25% {
        transform: scale(1.3);
    }

    50% {
        transform: scale(1);
    }

    75% {
        transform: scale(1.3);
    }

    100% {
        transform: scale(1);
    }

    }

    .favorite-btn .favorite-btn-label .action {
        display: none;
    }

    .favorite-btn .favorite-checkbox + .favorite-btn-label .action {
        position: relative;
        overflow: hidden;
        display: grid;
    }

        .favorite-btn .favorite-checkbox + .favorite-btn-label .action span {
            grid-column-start: 1;
            grid-column-end: 1;
            grid-row-start: 1;
            grid-row-end: 1;
            transition: all .5s;
        }

            .favorite-btn .favorite-checkbox + .favorite-btn-label .action span.option-1 {
                transform: translate(0px, 0%);
                opacity: 1;
            }

    .favorite-btn .favorite-checkbox:checked + .favorite-btn-label .action span.option-1 {
        transform: translate(0px, -100%);
        opacity: 0;
    }

    .favorite-btn .favorite-checkbox + .favorite-btn-label .action span.option-2 {
        transform: translate(0px, 100%);
        opacity: 0;
    }

    .favorite-btn .favorite-checkbox:checked + .favorite-btn-label .action span.option-2 {
        transform: translate(0px, 0%);
        opacity: 1;
    }
    /* Add these styles to your existing CSS */

    .carousel-track {
        position: relative;
        z-index: 4;
    }

    .carousel-item {
        flex: 0 0 calc(33.333% - 20px);
        margin-right: 20px;
        display: none;
        opacity: 1;
        transform: translateX(0);
        transition: transform 0.5s ease, opacity 0.5s ease;
    }

        .carousel-item.active {
            display: block;
        }

    /* Fix for responsive design */
    media (max-width: 768px) {
        .carousel-item

    {
        flex: 0 0 100%;
        margin-right: 0;
    }

    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    html, body {
        margin: 0;
        padding: 0;
        width: 100%;
        overflow-x: hidden;
    }

    .trivago-container {
        width: 100%;
        max-width: 100%;
        padding: 0 5%; /* Add 5% padding on left and right */
        margin: 0;
        box-sizing: border-box; /* Ensure padding doesn't break the layout star*/
    }

    .hero-section {
        position: relative;
        background-image: url('/Images/beach.jpg');
        background-size: cover;
        background-position: center;
        height: 400px;
        width: 100vw;
        left: 50%;
        right: 50%;
        margin-left: -50vw;
        margin-right: -50vw;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 30px;
    }

        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 124, 195, 0.6); /* Blue overlay for readability */
        }

    .search-wrapper {
        position: relative;
        z-index: 1;
        max-width: 800px;
        width: 100%;
        padding: 0 20px;
        text-align: center;
    }

    .main-heading {
        color: white;
        font-size: 28px;
        font-weight: 500;
        margin-bottom: 30px;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.5);
    }

    .search-box {
        background-color: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .search-input-wrapper {
        display: flex;
        align-items: center;
        position: relative;
    }

    .search-icon {
        position: absolute;
        left: 15px;
        color: #666;
        font-size: 18px;
    }

    .search-input {
        flex: 1;
        padding: 15px 15px 15px 45px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 16px;
        outline: none;
    }

    .search-button {
        padding: 15px 25px;
        background-color: #f48f00;
        color: white;
        border: none;
        border-radius: 4px;
        font-weight: 500;
        font-size: 16px;
        cursor: pointer;
        margin-left: 10px;
        transition: background-color 0.2s;
    }

    .search-input:focus {
        border-color: #007cc3;
    }

    .search-button:hover {
        background-color: #e57f00;
    }

    /* Results Section Styles trivago  */


    .results-section {
        position: relative;
        background-color: #f4f4f4;
        padding-bottom: 60px;
        padding-left: 5%; /* Add left padding */
        padding-right: 5%; /* Add right padding */
    }

    .results-header {
        padding-left: 5%;
        padding-right: 5%;
    }

    .mt-40 {
        padding-left: 5%;
        padding-right: 5%;
    }



    .section-title {
        font-size: 24px;
        font-weight: 500;
        color: #333;
    }

    .filters {
        display: flex;
        align-items: center;
    }

    .filter-label {
        margin-right: 10px;
        color: #666;
    }

    .filter-dropdown {
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 4px;
        outline: none;
        cursor: pointer;
    }

    .special-label {
        background-color: #fff;
        padding: 6px 12px;
        border-radius: 4px;
        border: 1px solid #eee;
    }

    .discount-badge {
        color: #f90404;
        font-weight: 500;
    }

        .discount-badge i {
            margin-right: 5px;
        }

    /* Carousel Styles results-header */
    .carousel-container {
        position: relative;
        z-index: 1;
        margin-bottom: 40px;
        padding-bottom: 30px;
    }



    .carousel-wrapper {
        position: relative;
        overflow: hidden;
        padding: 0 50px; /* Added padding to make room for the buttons */
    }



    .carousel-track {
        display: flex;
        overflow: visible;
        margin: 0 -10px; /* Negative margin to counteract item padding */
    }

    .carousel-item {
        flex: 0 0 calc(33.333% - 20px); /* Maintain 3-column layout */
        margin-right: 10px;
        margin-left: 10px;
        padding: 10px; /* Add padding to create shadow space */
        box-sizing: border-box;
    }

        .carousel-item.active {
            display: block;
        }

    .carousel-control {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        width: 40px;
        height: 40px;
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        z-index: 10;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

        .carousel-control.prev {
            left: 10px; /* Changed from -20px to 10px */
        }

        .carousel-control.next {
            right: 10px; /* Changed from -20px to 10px */
        }

        .carousel-control i {
            color: #007cc3;
        }

    .offer-card {
        display: flex;
        flex-direction: column;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
        transition: transform 0.2s, box-shadow 0.2s;
        height: 100%;
        position: relative;
        overflow: hidden;
    }


        .offer-card:not(:hover) {
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.12), 0 1px 3px rgba(0, 0, 0, 0.14);
        }

        .offer-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

    .special-offer {
        border: 2.2px solid #f90404;
    }

    .offer-image {
        height: 200px;
        overflow: hidden;
        position: relative;
    }

        .offer-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    .discount-badge-corner {
        position: absolute;
        top: 0;
        left: 0;
        background-color: #f90404;
        color: white;
        padding: 5px 10px;
        font-size: 14px;
        font-weight: 500;
        border-radius: 0 0 8px 0;
        z-index: 1;
    }

    .offer-details {
        display: flex;
        flex-direction: column;
        padding: 20px;
        flex: 1;
    }

    .offer-info {
        flex: 1;
        margin-bottom: 15px;
    }

    .offer-name {
        font-size: 18px;
        font-weight: 500;
        color: #007cc3;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
    /*stars offer*/
    .stars-container {
        margin-bottom: 15px;
    }

    .stay-stars {
        color: #ffb700;
        font-size: 25px;
        padding-left: 5px;
    }

    .star-rating {
        display: inline-block;
        direction: rtl;
        unicode-bidi: bidi-override;
    }

        .star-rating .star {
            display: inline-block;
            font-size: 24px;
            color: #ddd;
            cursor: pointer;
            margin-right: 2px;
        }

            .star-rating .star:hover,
            .star-rating .star:hover ~ .star,
            .star-rating .star.active,
            .star-rating .star.active ~ .star {
                color: #ffb700;
            }

    .rating-text {
        display: inline-block;
        margin-left: 10px;
        color: var(--dark-gray);
        font-size: 14px;
    }
    /*more stars*/
    .rating-container {
        display: flex;
        align-items: center;
    }

    .stars {
        display: flex;
        position: relative;
        direction: rtl; /* Ensure the stars go from left to right */
    }

        .stars label {
            font-size: 0;
            cursor: pointer; /* Make the stars clickable */
        }

            .stars label:before {
                content: "★";
                color: #ffb700;
                font-size: 24px;
            }

        .stars input:checked ~ label:before,
        .stars:not(:checked) > label:hover:before,
        .stars:not(:checked) > label:hover ~ label:before {
            color: #ffb700;
        }

        .stars input {
            position: absolute;
            right: -9999px;
        }


    .rating-number {
        margin-left: 10px;
        font-size: 20px;
        color: var(--dark-gray);
    }

    .location {
        color: #666;
        font-size: 14px;
        display: flex;
        align-items: center;
    }

        .location i {
            margin-right: 5px;
        }

    .offer-actions {
        display: flex;
        flex-direction: column;
    }

    .price-tag {
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
    }

    .price-label {
        font-size: 14px;
        color: #666;
    }

    .price-value {
        font-size: 22px;
        font-weight: 700;
        color: #333;
    }

        .price-value.highlight {
            color: #f48f00;
        }

    .btn-view {
        padding: 12px 24px;
        background-color: #f48f00;
        color: white;
        border-radius: 4px;
        text-decoration: none;
        font-weight: 500;
        text-align: center;
        transition: background-color 0.2s;
    }

        .btn-view:hover {
            background-color: #e57f00;
        }

    /* Responsive Styles */
    media (max-width: 768px) {
        .results-section, .results-header, .mt-40

    {
        padding-left: 3%;
        padding-right: 3%;
    }

    }</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize all carousels
        initCarousels();

        let favoriteBtns = document.querySelectorAll(".favorite-btn-label");
        console.log(favoriteBtns);

        favoriteBtns.forEach(el => el.addEventListener('click', event => {
            submitFavorite(event.target);
        }));
    });

    function initCarousels() {
        const carousels = document.querySelectorAll('.carousel-wrapper');

        carousels.forEach(carousel => {
            const id = carousel.id;
            const track = carousel.querySelector('.carousel-track');
            const items = carousel.querySelectorAll('.carousel-item');
            const prevBtn = carousel.querySelector('.carousel-control.prev');
            const nextBtn = carousel.querySelector('.carousel-control.next');

            let currentIndex = 0;
            const itemsPerSlide = getItemsPerSlide();
            const totalSlides = Math.ceil(items.length / itemsPerSlide);

            function getItemsPerSlide() {
                if (window.innerWidth <= 768) {
                    return 1;
                }
                return 3;
            }

            function updateCarousel() {
                items.forEach((item, index) => {
                    const startIndex = currentIndex * itemsPerSlide;
                    const endIndex = startIndex + itemsPerSlide;

                    if (index >= startIndex && index < endIndex) {
                        item.classList.add('active');
                    } else {
                        item.classList.remove('active');
                    }
                });

                // Update buttons visibility
                if (currentIndex === 0) {
                    prevBtn.style.visibility = 'hidden';
                } else {
                    prevBtn.style.visibility = 'visible';
                }

                if (currentIndex >= totalSlides - 1) {
                    nextBtn.style.visibility = 'hidden';
                } else {
                    nextBtn.style.visibility = 'visible';
                }
            }

            function nextSlide() {
                if (currentIndex < totalSlides - 1) {
                    currentIndex++;
                    updateCarousel();
                }
            }

            function prevSlide() {
                if (currentIndex > 0) {
                    currentIndex--;
                    updateCarousel();
                }
            }

            // Event listeners carousel
            nextBtn.addEventListener('click', nextSlide);
            prevBtn.addEventListener('click', prevSlide);

            // Handle window resize
            window.addEventListener('resize', function() {
                const newItemsPerSlide = getItemsPerSlide();
                if (newItemsPerSlide !== itemsPerSlide) {
                    currentIndex = 0;
                    updateCarousel();
                }
            });

            // Initialize carousel
            updateCarousel();
        });
    }
    
    
    function submitFavorite(clicked) {
        const favoriteForm = clicked.closest("form");
        const formData = new FormData(favoriteForm);
        // Send the data using Fetch API
        fetch('/Favorite/Favorite', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    
                } else {
                    alert('Something went wrong, please try again later.');
                    // Rollback the checkbox state if the request fails
                    favoriteCheckbox.checked = !favoriteCheckbox.checked;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred, please try again later.');
                // Rollback the checkbox state if the request fails
                favoriteCheckbox.checked = !favoriteCheckbox.checked;
            });
    }

    
    const favoriteCheckbox = document.getElementById('favorite');
    const favoriteForm = document.getElementById('favoriteForm');
    if (favoriteCheckbox) {
        favoriteCheckbox.addEventListener('change', function () {
            return;
            // Create a FormData object to send the form data
            const formData = new FormData(favoriteForm);
            // Send the data using Fetch API
            fetch('/Favorite/Favorite', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const option1 = document.querySelector('.option-1');
                        const option2 = document.querySelector('.option-2');

                        // Update the UI based on whether it's favorited or not
                        if (favoriteCheckbox.checked) {
                            option1.style.display = 'none';
                            option2.style.display = 'block';
                        } else {
                            option1.style.display = 'block';
                            option2.style.display = 'none';
                        }
                    } else {
                        alert('Something went wrong, please try again later.');
                        // Rollback the checkbox state if the request fails
                        favoriteCheckbox.checked = !favoriteCheckbox.checked;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred, please try again later.');
                    // Rollback the checkbox state if the request fails
                    favoriteCheckbox.checked = !favoriteCheckbox.checked;
                });
        });
    }
</script>