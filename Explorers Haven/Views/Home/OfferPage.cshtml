@using Explorers_Haven.ViewModels.Main
@model OfferPageViewModel
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.OfferName - Explorers Haven</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
        --primary-color: #2681ff;
        --secondary-color: #ff6500;
        --text-color: #333;
        --light-gray: #f5f5f5;
        --medium-gray: #e0e0e0;
        --dark-gray: #666;
        --white: #fff;
        --border-radius: 8px;
        --box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        --discount-color: #e74c3c;
        }

        * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }

        body {
        background-color: #f5f7fa;
        color: var(--text-color);
        line-height: 1.6;
        }

        .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        }

        /* Header section */
        .offer-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 20px;
        padding-bottom: 20px;
        border-bottom: 1px solid var(--medium-gray);
        }

        .offer-title {
        flex: 1;
        }

        .offer-title h1 {
        font-size: 28px;
        margin-bottom: 10px;
        color: #333;
        }

        .rating-container {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        }

        .stars {
        display: flex;
        position: relative;
        direction: rtl; /* Ensure the stars go from left to right */
        }

        .stars label {
        font-size: 0;
        cursor: pointer; /* Make the stars clickable */
        }

        .stars label:before {
        content: "★";
        color: #ddd;
        font-size: 24px;
        }

        .stars input:checked ~ label:before,
        .stars:not(:checked) > label:hover:before,
        .stars:not(:checked) > label:hover ~ label:before {
        color: #ffb700;
        }

        .stars input {
        position: absolute;
        right: -9999px;
        }


        .rating-number {
        margin-left: 10px;
        font-size: 16px;
        color: var(--dark-gray);
        }

        /* Fixed favorite button animation */
        .favorite-btn .favorite-checkbox {
        display: none;
        }

        .favorite-btn .favorite-btn-label {
        background-color: white;
        display: flex;
        align-items: center;
        gap: 14px;
        padding: 10px 15px 10px 10px;
        cursor: pointer;
        user-select: none;
        border-radius: 10px;
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        color: black;
        }

        .favorite-btn .favorite-checkbox:checked + .favorite-btn-label svg {
        fill: hsl(0deg 100% 50%);
        stroke: hsl(0deg 100% 50%);
        animation: heartButton 1s;
        }

        keyframes heartButton {
        0% {
        transform: scale(1);
        }

        25% {
        transform: scale(1.3);
        }

        50% {
        transform: scale(1);
        }

        75% {
        transform: scale(1.3);
        }

        100% {
        transform: scale(1);
        }
        }

        .favorite-btn .favorite-checkbox + .favorite-btn-label .action {
        position: relative;
        overflow: hidden;
        display: grid;
        }

        .favorite-btn .favorite-checkbox + .favorite-btn-label .action span {
        grid-column-start: 1;
        grid-column-end: 1;
        grid-row-start: 1;
        grid-row-end: 1;
        transition: all .5s;
        }

        .favorite-btn .favorite-checkbox + .favorite-btn-label .action span.option-1 {
        transform: translate(0px, 0%);
        opacity: 1;
        }

        .favorite-btn .favorite-checkbox:checked + .favorite-btn-label .action span.option-1 {
        transform: translate(0px, -100%);
        opacity: 0;
        }

        .favorite-btn .favorite-checkbox + .favorite-btn-label .action span.option-2 {
        transform: translate(0px, 100%);
        opacity: 0;
        }

        .favorite-btn .favorite-checkbox:checked + .favorite-btn-label .action span.option-2 {
        transform: translate(0px, 0%);
        opacity: 1;
        }

        /* Main image */
        .main-image {
        width: 100%;
        margin-bottom: 20px;
        border-radius: var(--border-radius);
        overflow: hidden;
        }

        .main-image img {
        width: 100%;
        height: 400px;
        object-fit: cover;
        }

        /* Content sections */
        .content-section {
        display: flex;
        margin-bottom: 30px;
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
        }

        /* Improved description styling */
        .description {
        flex: 3;
        padding: 20px;
        }

        .description-title {
        font-size: 22px;
        margin-bottom: 15px;
        color: var(--primary-color);
        font-weight: 600;
        }

        .description-content {
        line-height: 1.8;
        color: var(--text-color);
        margin-bottom: 12px;
        font-size: 15px;
        }

        .info-label {
        font-weight: 600;
        color: var(--primary-color);
        margin-right: 5px;
        }

        .trip-info {
        display: flex;
        flex-wrap: wrap;
        margin-top: 20px;
        padding-top: 15px;
        border-top: 1px solid var(--medium-gray);
        }

        .trip-info-item {
        flex: 1;
        min-width: 200px;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        }

        .trip-info-item i {
        margin-right: 8px;
        color: var(--primary-color);
        }

        .booking-details {
        flex: 2;
        padding: 20px;
        background-color: #f9f9f9;
        border-left: 1px solid var(--medium-gray);
        }

        .price-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid var(--medium-gray);
        }

        .price-label {
        font-size: 14px;
        color: var(--dark-gray);
        }

        .price-value {
        font-size: 24px;
        font-weight: bold;
        color: var(--secondary-color);
        }

        form {
        display: flex;
        flex-direction: column;
        }

        label {
        margin-bottom: 5px;
        font-size: 14px;
        color: var(--dark-gray);
        }

        /* Improved discount styling */
        .discount-label {
        color: var(--discount-color);
        font-weight: 600;
        margin-bottom: 5px;
        font-size: 14px;
        display: flex;
        align-items: center;
        }

        .discount-label i {
        margin-right: 5px;
        }

        .discount-value {
        font-weight: bold;
        color: var(--discount-color);
        }

        input[type="number"],
        input[type="date"] {
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid var(--medium-gray);
        border-radius: var(--border-radius);
        }

        button[type="submit"],
        .book-now-btn {
        padding: 12px 20px;
        margin-top: 10px;
        background-color: var(--secondary-color);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.2s;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        }

        button[type="submit"]:hover,
        .book-now-btn:hover {
        background-color: #e65c00;
        }

        .cancel-btn {
        padding: 12px 20px;
        margin-top: 10px;
        background-color: var(--light-gray);
        color: var(--dark-gray);
        border: 1px solid var(--medium-gray);
        border-radius: var(--border-radius);
        font-size: 16px;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.2s;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        margin-left: 10px;
        }

        .cancel-btn:hover {
        background-color: #e0e0e0;
        }

        /* Accommodation section */
        .accommodation-section {
        margin-bottom: 30px;
        }

        .section-title {
        font-size: 24px;
        margin-bottom: 15px;
        color: var(--primary-color);
        }

        .accommodation-card {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
        display: flex;
        }

        .accommodation-image {
        flex: 1;
        max-width: 300px;
        }

        .accommodation-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        }

        .accommodation-details {
        flex: 2;
        padding: 20px;
        }

        .accommodation-title {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
        }

        .accommodation-name {
        font-size: 20px;
        color: var(--text-color);
        }

        .stay-stars {
        color: #ffb700;
        font-size: 16px;
        }

        .stay-price {
        font-size: 20px;
        font-weight: bold;
        color: var(--secondary-color);
        margin-top: 10px;
        }

        /* Improved amenities section */
        .amenities-section {
        margin-bottom: 30px;
        }

        .amenities-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        padding: 20px;
        }

        .amenity-item {
        display: flex;
        align-items: center;
        padding: 10px;
        border-radius: var(--border-radius);
        background-color: #f5f7fa;
        }

        .amenity-icon {
        margin-right: 10px;
        font-size: 10px;
            width: 30px;
        color: var(--primary-color);
        }

        .amenity-name {
        font-size: 15px;
        color: var(--text-color);
        }

        /* Travel details section */
        .travel-section {
        margin-bottom: 30px;
        }

        .travel-card {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        padding: 20px;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        }

        .travel-point {
        flex: 1;
        text-align: center;
        }

        .travel-location {
        font-size: 18px;
        font-weight: bold;
        color: var(--text-color);
        }

        .travel-date {
        font-size: 14px;
        color: var(--dark-gray);
        }

        .travel-icon {
        flex: 0.5;
        text-align: center;
        }

        .travel-icon img {
        width: 30px;
        opacity: 0.6;
        }

        .travel-transport {
        flex: 1;
        text-align: center;
        padding: 8px 15px;
        background-color: var(--light-gray);
        border-radius: 20px;
        font-size: 14px;
        color: var(--dark-gray);
        }

        /* Activities section */
        .activities-section {
        margin-bottom: 30px;
        }

        .activities-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 20px;
        }

        .activity-card {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
        }

        .activity-image {
        height: 180px;
        overflow: hidden;
        }

        .activity-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        }

        
        .activity-name {
        padding: 15px;
        font-size: 16px;
        font-weight: bold;
        color: var(--text-color);
        }

        /* Reviews section */
        .reviews-section {
        margin-bottom: 30px;
        }

        .review-form {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        padding: 20px;
        margin-bottom: 20px;
        }

        .review-form input[type="text"] {
        width: 100%;
        padding: 12px;
        border: 1px solid var(--medium-gray);
        border-radius: var(--border-radius);
        margin-bottom: 10px;
        }

        .review-form button {
        padding: 10px 20px;
        background-color: var(--primary-color);
        color: var(--white);
        border: none;
        border-radius: var(--border-radius);
        cursor: pointer;
        transition: background-color 0.2s;
        }

        .review-form button:hover {
        background-color: #1a6ac2;
        }

        .comment-list {
        background-color: var(--white);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        padding: 20px;
        }

        /* Updated comment styling */
        .comment-item {
        display: flex;
        flex-direction: column;
        margin-bottom: 20px;
        padding-bottom: 20px;
        border-bottom: 1px solid var(--medium-gray);
        }

        .comment-item:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
        border-bottom: none;
        }

        .comment-header {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        }

        .comment-avatar {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        overflow: hidden;
        margin-right: 15px;
        }

        .comment-avatar img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        }

        .comment-rating {
        display: flex;
        margin-bottom: 8px;
        }

        .comment-content {
        flex: 1;
        line-height: 1.5;
        margin-left: 65px;
        }

        .booking-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
        }
        /*new css*/
        .stars-container {
            margin-bottom: 15px;
        }

        .star-rating {
            display: inline-block;
            direction: rtl;
            unicode-bidi: bidi-override;
        }

            .star-rating .star {
                display: inline-block;
                font-size: 24px;
                color: #ddd;
                cursor: pointer;
                margin-right: 2px;
            }

                .star-rating .star:hover,
                .star-rating .star:hover ~ .star,
                .star-rating .star.active,
                .star-rating .star.active ~ .star {
                    color: #ffb700;
                }

        .rating-text {
            display: inline-block;
            margin-left: 10px;
            color: var(--dark-gray);
            font-size: 14px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="offer-header">
            <div class="offer-title">
                <h1>@Model.OfferName</h1>
                <div class="rating-container">
                    <span class="rating-number" style="margin-left: 4px;">@Model.OfferRating.Value.ToString("0.0")</span>
                    @for (int i = 0; i < Model.OfferRatingStars; i++)
                    {
                        <div class="stay-stars">
                            <span>★</span>
                        </div>
                    }
                </div>
            </div>
            <form id="favoriteForm" method="post" action="/Favorite/Favorite">
                <div class="favorite-btn">
                    <input type="hidden" name="id" value="@Model.OfferId" />
                    <input type="checkbox" id="favorite" class="favorite-checkbox" name="favorite-checkbox" value="true" @(Model.IsFavorited.Value ? "checked" : "")>
                    <label class="favorite-btn-label" for="favorite">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-heart">
                            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                        </svg>
                        <div class="action">
                            <span class="option-1">Add to Favorites</span>
                            <span class="option-2">Added to Favorites</span>
                        </div>
                    </label>
                </div>
                <button type="submit" style="display:none;">Submit</button>
            </form>
        </div>

        <div class="main-image">
            <img src="@Model.OfferPic" alt="@Model.OfferName">
        </div>

        <div class="content-section">
            <div class="description">
                <div class="description-title">Description</div>
                <div class="description-content">@Model.OfferDisc</div>
                <div class="description-title">Booking options</div>
                <div class="description-content">Bookings available every week the same day as starting date. Last available week for booking is on the last date.</div>
                
                <div class="trip-info">
                    <div class="trip-info-item">
                        <i class="fas fa-calendar-alt"></i>
                        <span><span class="info-label">Starting Date:</span> @Model.OfferStart</span>
                    </div>
                    <div class="trip-info-item">
                        <i class="fas fa-calendar-check"></i>
                        <span><span class="info-label">Last Date:</span> @Model.OfferLast</span>
                    </div>
                    <div class="trip-info-item">
                        <i class="fas fa-users"></i>
                        <span><span class="info-label">Max people:</span> @Math.Floor(Model.OfferPeople.Value)</span>
                    </div>
                    <div class="trip-info-item">
                        <i class="fas fa-clock"></i>
                        <span><span class="info-label">Duration:</span> @Math.Floor(Model.OfferDays.Value) days</span>
                    </div>
                </div>
            </div>

            <div class="booking-details">
                <div class="price-container">
                    <div class="price-label">Price per person</div>
                    <div class="price-value">@Model.OfferPrice лв</div>
                </div>
                <form method="post" action="/Booking/Book">
                    <!-- Hidden field for offer ID -->
                    <input type="hidden" name="id" value="@Model.OfferId" />

                    <!-- People Count Input -->
                    <label for="ppl">People Count:</label>
                    <input type="number" id="ppl" name="ppl" required min="1" />

                    <!-- Discounted People Count Input -->
                    @if (Model.IsOnDiscount == true)
                    {
                        <label for="discppl" class="discount-label">
                            <i class="fas fa-tag"></i>
                            Elders or Kids Count with <span class="discount-value" style="margin-left: 4px;"> @Math.Floor(Model.OfferDiscount.Value)% discount</span>:
                        </label>
                        <input type="number" id="discppl" name="discppl" required min="0" />
                    }
                    else
                    {
                        <input type="hidden" id="discppl" name="discppl" value="1" />
                    }


                    <!-- Start Date Input -->
                    <label for="st">Start Date:</label>
                    <input type="date" id="st" name="st" required />

                    <!-- Submit Button -->
                    <button type="submit">Book Now</button>
                </form>
            </div>
        </div>

        <div class="accommodation-section">
            <h2 class="section-title">Accommodation Details</h2>
            <div class="accommodation-card">
                <div class="accommodation-image">
                    <img src="@Model.StayPic" alt="@Model.StayName">
                </div>
                <div class="accommodation-details">
                    <div class="accommodation-title">
                        <h3 class="accommodation-name">@Model.StayName</h3>
                        <div class="stay-stars">
                            @for (int i = 0; i < Model.StayStars.Value; i++)
                            {
                                <span>★</span>
                            }
                        </div>
                    </div>
                    <p>@Model.StayDisc</p>
                    <div class="stay-price">@Model.StayPrice лв</div>
                </div>
            </div>
        </div>
        
        <!-- Improved amenities section -->
        <div class="amenities-section">
            <h2 class="section-title">Amenities</h2>
            <div class="amenities-grid">
                @foreach (var a in Model.Amenities)
                {
                    <div class="amenity-item">
                        <img class="amenity-icon" src="@a.Icon" alt="Amenity Icon" />
                        <div class="amenity-name">@a.Name</div>
                    </div>
                }
            </div>
        </div>
        
        <div class="travel-section">
            <h2 class="section-title">Travel Details</h2>
            @foreach (var a in Model.Travels)
            {
                <div class="travel-card">
                    <div class="travel-point">
                        <div class="travel-location">@a.Start</div>
                    </div>
                    @foreach(var tr in Model.Transports)
                    {
                    if(@a.TransportId==tr.Id&&tr.Name=="Plane")
                        {
                            <div class="travel-transport">@tr.Name</div>
                    <div class="travel-icon">
                                
                        <img src="/Images/Plane.svg" alt="Plane" />
                    </div>
                    }
                    if(@a.TransportId==tr.Id&&tr.Name=="Train")
                    {
                    <div class="travel-icon">
                                <div class="travel-transport">@tr.Name</div>
                                <img src="/Images/Train.svg" alt="Train" />
                    </div>
                    }
                        if (@a.TransportId == tr.Id && tr.Name == "Boat")
                        {
                            <div class="travel-icon">
                                <div class="travel-transport">@tr.Name</div>
                                <img src="/Images/boat.svg" alt="boat" />
                            </div>
                        }
                        if (@a.TransportId == tr.Id && tr.Name == "Custom")
                        {
                            <div class="travel-icon">
                                <div class="travel-transport">@tr.Name</div>
                                <img src="/Images/custom.svg" alt="custom" />
                            </div>
                        }
                    }
                    
                    
                    <div class="travel-point">
                        <div class="travel-location">@a.Finish</div>
                    </div>
                    
                </div>
            }
        </div>

        <div class="activities-section">
            <h2 class="section-title">Activities</h2>
            <div class="activities-grid">
                @foreach (var a in Model.Activities)
                {
                    <div class="activity-card">
                        <div class="activity-image">
                            <img src="@a.CoverImage" alt="@a.Name">
                        </div>
                        <div class="activity-name">@a.Name</div>
                    </div>
                }
            </div>
        </div>

        <div class="reviews-section">
            <h2 class="section-title">Reviews</h2>

            <div class="review-form">
                <form method="post" action="/Comment/WriteComment" id="reviewForm">
                    <input type="hidden" name="id" value="@Model.OfferId" />
                    <input type="hidden" name="rating" id="ratingValue" value="0" />

                    <!-- Review Form Layout -->
                    <div class="form-container">
                        <div class="profile-container">
                            <img src="path-to-your-profile-image" alt="Profile Picture" class="profile-picture">
                        </div>
                        <div class="comment-container">
                            <div class="stars-container">
                                <div class="star-rating">
                                    <span class="star" data-value="1">&#9733;</span>
                                    <span class="star" data-value="2">&#9733;</span>
                                    <span class="star" data-value="3">&#9733;</span>
                                    <span class="star" data-value="4">&#9733;</span>
                                    <span class="star" data-value="5">&#9733;</span>
                                </div>
                                <div class="rating-text">Click to rate</div>
                            </div>

                            <input type="text" id="comment" name="comment" placeholder="Share your experience..." />
                            <button type="submit">Submit</button>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Display Comments Section -->
            <div class="comment-list" id="commentsSection">
                @foreach (var a in Model.Comments)
                {
                    <div class="comment-item">
                        @foreach (var u in Model.Users)
                        {
                            if (u.Id == a.UserId)
                            {
                                <div class="comment-avatar">
                                    <img src="@u.ProfilePicture" alt="User profile">
                                </div>
                            }
                        }
                        <div class="comment-rating">
                            @for (int i = 0; i < a.Stars; i++)
                            {
                                <div class="stay-stars">
                                    <span>★</span>
                                </div>
                            }
                        </div>
                        <div class="comment-content">@a.Content</div>
                    </div>
                }
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            Star rating functionality
            const stars = document.querySelectorAll('.star-rating .star');
            const ratingValue = document.getElementById('ratingValue');
            const ratingText = document.querySelector('.rating-text');

            stars.forEach(star => {
                star.addEventListener('click', function() {
                    const value = this.getAttribute('data-value');
                    ratingValue.value = value;

                    Reset all stars
                    stars.forEach(s => s.classList.remove('active'));

                    Set active stars
                    stars.forEach(s => {
                        if (parseInt(s.getAttribute('data-value')) <= parseInt(value)) {
                            s.classList.add('active');
                        }
                    });

                    Update rating text
                    ratingText.textContent = `${value} star${value > 1 ? 's' : ''}`;
                });
            });

            Favorite functionality
            const favoriteCheckbox = document.getElementById('favorite');
            if (favoriteCheckbox) {
                favoriteCheckbox.addEventListener('change', function() {
                    const formData = new FormData(document.getElementById('favoriteForm'));

                    fetch('/Favorite/Favorite', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const option1 = document.querySelector('.option-1');
                            const option2 = document.querySelector('.option-2');

                            if (favoriteCheckbox.checked) {
                                option1.style.display = 'none';
                                option2.style.display = 'block';
                            } else {
                                option1.style.display = 'block';
                                option2.style.display = 'none';
                            }
                        } else {
                            alert('Something went wrong, please try again later.');
                            favoriteCheckbox.checked = !favoriteCheckbox.checked;
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred, please try again later.');
                        favoriteCheckbox.checked = !favoriteCheckbox.checked;
                    });
                });
            }

            Prevent form submission on Enter key in comment input
            document.getElementById('comment').addEventListener('keydown', function(event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    return false;
                }
            });

            Form submission only on button click
            document.getElementById('reviewForm').addEventListener('submit', function(event) {
                Check if rating is selected
                if (ratingValue.value === "0") {
                    event.preventDefault();
                    alert('Please select a rating before submitting');
                    return false;
                }
            });
        });
    </script>
</body>
</html>